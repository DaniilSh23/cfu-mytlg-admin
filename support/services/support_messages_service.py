from mytlg.utils import send_message_by_bot
from support.models import SupportMessages
from django.core.exceptions import ObjectDoesNotExist

from mytlg.servises.bot_users_service import BotUsersService
from cfu_mytlg_admin.settings import MY_LOGGER, BOT_TOKEN


class SupportMessagesService:

    @staticmethod
    def create_message(message_data: dict):
        """
        –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.
        """
        MY_LOGGER.info(f"–í—ã–∑–≤–∞–Ω —Å–µ—Ä–≤–∏—Å –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Å–æ–æ–±—â–µ–Ω–∏—è –û–°. | message_data: {message_data!r}")
        message = SupportMessages(
            bot_user=message_data.get('bot_user'),
            message=message_data.get('message')
        )
        message.save()
        return message

    @staticmethod
    def notify_admins(message: SupportMessages):
        """
        –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤.
        """
        MY_LOGGER.info(f"–í—ã–∑–≤–∞–Ω —Å–µ—Ä–≤–∏—Å –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤ –±–æ—Ç–∞. | message: {message!r}")
        admins_tlg_ids_tpl = BotUsersService.get_bot_admins_tlg_ids()
        msg_for_send = (f"üí¨ –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏!\n\nüë§ –Æ–∑–µ—Ä: {message.bot_user.tlg_id}\n"
                        f"üìù –¢–µ–∫—Å—Ç: {message.message}")
        [send_message_by_bot(chat_id=i_tlg_id, text=msg_for_send) for i_tlg_id in admins_tlg_ids_tpl]

