from django.core.management import BaseCommand
from loguru import logger

from mytlg.models import Themes, Channels, SubThemes


class Command(BaseCommand):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ë–î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    """
    def handle(self, *args, **options):
        logger.info('–°—Ç–∞—Ä—Ç –∫–æ–º–∞–Ω–¥—ã –ø–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—é –ë–î!')

        # –°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å–∏ –æ —Ç–µ–º–∞—Ç–∏–∫–∞—Ö
        themes = {
            'Telegram'.lower(): (
                ('ChatGPT & Midjourney ', 'https://t.me/nomax'),
                ('Botcollection ', 'https://t.me/botcollection'),
                ('–ö–∞–Ω–∞–ª—ã Telegram - –∫–∞—Ç–∞–ª–æ–≥', 'https://t.me/chagram'),
                ('–ö–∞—Ç–∞–ª–æ–≥ Telegram –∫–∞–Ω–∞–ª–æ–≤, –±–æ—Ç–æ–≤ ', 'https://t.me/openbusines'),
                ('Telegram Baza ', 'https://t.me/TBaza'),
                ('HowYour ', 'https://t.me/HowYour'),
            ),
            '–°–æ—Ñ—Ç –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'.lower(): (
                ('üì≤ Easy APK  ', 'https://t.me/EasyAPK'),
                ('üíé MUST HAVE ', 'https://t.me/Alexey070315'),
                ('B–∑–ªo–ºa–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ', 'https://t.me/daker7'),
            ),
            '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥, PR, —Ä–µ–∫–ª–∞–º–∞'.lower(): (
                ('–°–µ–º–µ–π–∫–∞ –±–æ—Ç–æ–≤', 'https://t.me/FamilyBots'),
                ('–ö–ª–∏–µ–Ω—Ç –≤—Å–µ–≥–¥–∞ –ø—Ä–∞–≤', 'https://t.me/klientvp'),
                ('–°–æ—Å–∏—Å–æ—á–Ω–∞—è', 'https://t.me/joinchat/-pYpF2amrepmMTli'),
                ('–∫–∞–±–∞—á–∫–æ–≤–∞—è –∏–∫—Ä–∞ –ø–æ –∞–∫—Ü–∏–∏', 'https://t.me/sale_caviar'),
            ),
            '–ë–∏–∑–Ω–µ—Å –∏ —Å—Ç–∞—Ä—Ç–∞–ø—ã'.lower(): (
                ('–ö–Ω–∏–≥–∏ –Ω–∞ –º–∏–ª–ª–∏–æ–Ω | –±–∏–∑–Ω–µ—Å –±–ª–æ–≥', 'https://t.me/ikniga'),
                ('–û–ü–ï–†–®–¢–ê–ë –†–´–ë–ê–ö–û–í –ò–ì–û–†–¨', 'https://t.me/rybakovigor'),
                ('–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä', 'https://t.me/TransformatorTV'),
                ('–°—Ç–∞—Ä—Ç–∞–ø –¥–Ω—è. –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ì–æ—Ä–Ω—ã–π.', 'https://t.me/startupoftheday'),
                ('–°–±–µ—Ä–ë–∏–∑–Ω–µ—Å', 'https://t.me/sberbusiness'),
            ),
            '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'.lower(): (
                ('!Finuniver', 'https://t.me/finuniverchan'),
                ('–í—ã—à–∫–∞ –¥–ª—è —Å–≤–æ–∏—Ö', 'https://t.me/hse_live'),
                ('‚ö°Ô∏èITMOLNIA‚ö°Ô∏è', 'https://t.me/itmolnia'),
                ('–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç ¬´–°–∏–Ω–µ—Ä–≥–∏—è¬ª', 'https://t.me/synergyunivers'),
            ),
            '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã'.lower(): (
                ('CoinLLions', 'https://t.me/coinllions'),
                ('–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞–º üëæ', 'https://t.me/cryptogram_ton'),
                ('–ö—Ä–∏–ø—Ç–∞ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞ü§ØüöÄ', 'https://t.me/crypto_mozgi'),
                ('–°–∏–≥–Ω–∞–ª—ã –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã', 'https://t.me/torgovlya_fyuchersy2'),
            ),
            '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'.lower(): (
                ('–≠–∫—Å–ø–ª–æ–π—Ç ', 'https://t.me/exploitex'),
                ('Wylsacom Red ', 'https://t.me/Wylsared'),
                ('–ù–µ –±–∞–≥, –∞ —Ñ–∏—á–∞ ', 'https://t.me/bugfeature'),
                ('ChatGPT 4.0 | –ë–æ—Ç –ö–∞–Ω–∞–ª ‚ú≥Ô∏è ', 'https://t.me/ChatGPT_Main'),
                ('–ú–∏–ª–æ—Ä–¥ ', 'https://t.me/+itM4B8KVXRIzNzdi'),
                ('1337: IT, ChatGPT, Midjourney ', 'https://t.me/chatgpt1337_artis'),
                ('concertzaal', 'https://t.me/concertzaal'),
            )
        }
        sub_themes = {
            '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'.lower(): {
                'Python'.lower(): (
                    ('Python –æ–±—É—á–∞—é—â–∏–π', 'https://t.me/pythonist24'),
                    ('Python Academy ', 'https://t.me/python_academy'),
                    ('Python Hacks', 'https://t.me/python_secrets'),
                    ('Python Community', 'https://t.me/Python_Community_ru'),
                ),
                'Frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞'.lower(): (
                    ('–ü—Ä–æ—Å—Ç–æ–π HTML | –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', 'https://t.me/joinchat/ml4Q_yJfHtwwOGUy'),
                    ('–ü—Ä–æ—Å—Ç–æ–π JavaScript | –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', 'https://t.me/joinchat/T1h1H8kGO0hhYjc6'),
                    ('–°–∞–π—Ç–æ–¥–µ–ª | GitHub, CodePen, JavaScript, CSS, Figma', 'https://t.me/sitodel'),
                ),
                'Linux'.lower(): (
                    ('Linux –¥–ª—è —á–∞–π–Ω–∏–∫–∞', 'https://t.me/os_linux_ru'),
                    ('DevOps School | Linux, InfoSec, –ò–ë', 'https://t.me/devops_sc'),
                    ('Kali Linux', 'https://t.me/linuxkalii'),
                ),
            },
            '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'.lower(): {
                '–û–Ω–ª–∞–π–Ω –æ–±—É—á–µ–Ω–∏–µ'.lower(): (
                    ('GeekBrains', 'https://t.me/geekbrains_ru'),
                    ('–Ø–Ω–¥–µ–∫—Å –ü—Ä–∞–∫—Ç–∏–∫—É–º', 'https://t.me/yndx_practicum'),
                    ('Skillbox: –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞', 'https://t.me/skillboxru'),
                    ('–ù–µ—Ç–æ–ª–æ–≥–∏—è', 'https://t.me/netology_ru'),
                    ('–õ–µ–∫—Ç–æ—Ä–∏–π', 'https://t.me/lektorium'),
                ),
                '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫'.lower(): (
                    ('Fucking English | –ê–Ω–≥–ª–∏–π—Å–∫–∏–π 18+', 'https://t.me/fuckingenglish'),
                    ('–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —Å –Ω—É–ª—è | –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫', 'https://t.me/EnglishBestChannel'),
                    ('–£–ß–ò–õ–ö–ê –ê–ù–ì–õ–ò–ô–°–ö–û–ì–û', 'https://t.me/englishmaria'),
                )
            }
        }
        for i_key, i_value in themes.items():
            i_theme, i_created = Themes.objects.get_or_create(
                theme_name=i_key,
                defaults={'theme_name': i_key}
            )
            logger.success(f'–¢–µ–º–∞ {i_key!r} {"—Å–æ–∑–¥–∞–Ω–∞" if i_created else "—É–∂–µ –µ—Å—Ç—å"} –≤ –ë–î.')
            for j_ch_name, j_ch_lnk in i_value:
                ch_obj, j_created = Channels.objects.get_or_create(
                    channel_link=j_ch_lnk,
                    defaults={
                        "channel_name": j_ch_name,
                        "channel_link": j_ch_lnk,
                        "theme": i_theme,
                        'sub_theme': None,
                    }
                )
                logger.success(f'–ö–∞–Ω–∞–ª {j_ch_lnk!r} {"—Å–æ–∑–¥–∞–Ω" if j_created else "—É–∂–µ –µ—Å—Ç—å"} –≤ –ë–î.')

            # –î–æ—Å—Ç–∞—ë–º –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ë–î –ø–æ–¥—Ç–µ–º—ã
            i_sub_themes = sub_themes.get(i_key)
            if i_sub_themes:
                for k_key, k_val in i_sub_themes.items():
                    i_sub_theme, i_created = SubThemes.objects.get_or_create(
                        sub_theme_name=k_key,
                        defaults={'sub_theme_name': k_key}
                    )
                    logger.success(f'–ü–æ–¥—Ç–µ–º–∞ {k_key!r} {"—Å–æ–∑–¥–∞–Ω–∞" if i_created else "—É–∂–µ –µ—Å—Ç—å"} –≤ –ë–î.')
                    for k_ch_name, k_ch_lnk in k_val:
                        ch_obj, j_created = Channels.objects.get_or_create(
                            channel_link=k_ch_lnk,
                            defaults={
                                "channel_name": k_ch_name,
                                "channel_link": k_ch_lnk,
                                "sub_theme": i_sub_theme,
                                'theme': None,
                            }
                        )
                        logger.success(f'–ö–∞–Ω–∞–ª {k_ch_lnk!r} {"—Å–æ–∑–¥–∞–Ω" if j_created else "—É–∂–µ –µ—Å—Ç—å"} –≤ –ë–î.')

        logger.info('–û–∫–æ–Ω—á–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—é –ë–î!')
